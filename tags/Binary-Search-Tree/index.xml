<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Binary Search Tree on</title><link>https://ray-jpl.github.io/quartz-wiki/tags/Binary-Search-Tree/</link><description>Recent content in Binary Search Tree on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://ray-jpl.github.io/quartz-wiki/tags/Binary-Search-Tree/index.xml" rel="self" type="application/rss+xml"/><item><title>Binary Search Tree</title><link>https://ray-jpl.github.io/quartz-wiki/notes/Binary-Search-Tree/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ray-jpl.github.io/quartz-wiki/notes/Binary-Search-Tree/</guid><description>Binary Search Trees(BST) are binary trees that have a left subtree that only contains values smaller than the root node, the right subtree only contains values greater than the root node.</description></item><item><title>Binary Search Tree - In-Order Traversal</title><link>https://ray-jpl.github.io/quartz-wiki/notes/Binary-Search-Tree-Inorder-Traversal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ray-jpl.github.io/quartz-wiki/notes/Binary-Search-Tree-Inorder-Traversal/</guid><description>Inorder search for a [[notes/Binary Search Tree]] searches nodes from lowest to highest.
As Binary search trees are ordered in a way that all nodes in the left subtree contain a lower value than the current node.</description></item></channel></rss>